document.addEventListener("DOMContentLoaded", () => {
    console.log("‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß!");

    //‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡πÇ‡∏ä‡∏ß‡πå‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÄ‡∏à‡∏≠
    const texts = document.querySelectorAll(".hidden-text");
    const cards = document.querySelectorAll(".card");

    const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                entry.target.classList.add("show");
            } else {
                entry.target.classList.remove("show");
            }
        });
    }, { threshold: 0.2 });

    document.querySelectorAll(".slide-up").forEach(element => {
    observer.observe(element);
    });
    cards.forEach(card => observer.observe(card));
    texts.forEach(text => observer.observe(text));
    //‡∏Å‡∏≤‡∏£‡πå‡∏î
});



document.addEventListener("DOMContentLoaded", () => {
    const cursor = document.querySelector(".cursor");

    document.addEventListener("mousemove", (e) => {
        gsap.to(cursor, {
            x: e.clientX,
            y: e.pageY, // üî• ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏à‡∏≤‡∏Å clientY ‡πÄ‡∏õ‡πá‡∏ô pageY
            duration: 0.2,
            ease: "power2.out"
        });
    });

    const images = document.querySelectorAll(".image-container img");
    const cards = document.querySelectorAll(".card");
    const cardsmall = document.querySelectorAll(".cardsmall");

    images.forEach(img => {
        img.addEventListener("mouseenter", () => {
            //cursor.innerHTML = ">"; // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏≠‡∏¥‡πÇ‡∏°‡∏à‡∏¥‡∏ï‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
            //cursor.style.fontSize = "30px";
            gsap.to(cursor, { 
                width: 60, 
                height: 60, 
                background: "rgb(249, 249, 249)", 
                borderRadius: "100px",
                duration: 0.3
            });
        });

        img.addEventListener("mouseleave", () => {
            cursor.innerHTML = ""
            gsap.to(cursor, { 
                width: 40, 
                height: 40, 
                background: "transparent", 
                borderRadius: "50%",
                duration: 0.3
            });
        });
    });
    cards.forEach(cards => {
        cards.addEventListener("mouseenter", () => {
            //cursor.innerHTML = ">"; // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏≠‡∏¥‡πÇ‡∏°‡∏à‡∏¥‡∏ï‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
            //cursor.style.fontSize = "30px";
            gsap.to(cursor, { 
                width: 60, 
                height: 60, 
                background: "rgba(34, 34, 34, 0.33)", 
                borderRadius: "50px",
                duration: 0.3
            });
        });

        cards.addEventListener("mouseleave", () => {
            cursor.innerHTML = ""
            gsap.to(cursor, { 
                width: 40, 
                height: 40, 
                background: "transparent", 
                borderRadius: "50%",
                duration: 0.3
            });
        });
    });
    cardsmall.forEach(cardsmall => {
        cardsmall.addEventListener("mouseenter", () => {
            //cursor.innerHTML = ">"; // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏≠‡∏¥‡πÇ‡∏°‡∏à‡∏¥‡∏ï‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
            //cursor.style.fontSize = "30px";
            gsap.to(cursor, { 
                width: 60, 
                height: 60, 
                background: "rgba(34, 34, 34, 0.33)", 
                borderRadius: "50px",
                duration: 0.3
            });
        });

        cardsmall.addEventListener("mouseleave", () => {
            cursor.innerHTML = ""
            gsap.to(cursor, { 
                width: 40, 
                height: 40, 
                background: "transparent", 
                borderRadius: "50%",
                duration: 0.3
            });
        });
    });
});

const shadow = document.getElementById('shadow');
        let mouseX = 0, mouseY = 0;
        let shadowX = 0, shadowY = 0;
        let shadowScale = 1;

        // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏´‡∏ß‡∏ó‡∏µ‡πà‡∏™‡∏°‡∏π‡∏ó
        const speed = 0.1; // ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏´‡∏ß‡∏Ç‡∏≠‡∏á‡πÄ‡∏á‡∏≤
        const maxDistance = 200; // ‡∏£‡∏∞‡∏¢‡∏∞‡∏ó‡∏≤‡∏á‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î‡∏ó‡∏µ‡πà‡πÄ‡∏á‡∏≤‡∏à‡∏∞‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏ó‡∏µ‡πà

        // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡πà‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏Ç‡∏≠‡∏á‡πÄ‡∏á‡∏≤
        function updateShadowPosition() {
            const dx = mouseX - shadowX;
            const dy = mouseY - shadowY;

            // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡πà‡∏≤‡∏á‡∏Ç‡∏≠‡∏á‡πÄ‡∏°‡∏≤‡∏™‡πå‡∏à‡∏≤‡∏Å‡πÄ‡∏á‡∏≤
            const distance = Math.sqrt(dx * dx + dy * dy);

            // ‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î‡∏Ç‡∏≠‡∏á‡πÄ‡∏á‡∏≤‡∏ï‡∏≤‡∏°‡∏£‡∏∞‡∏¢‡∏∞‡∏ó‡∏≤‡∏á
            if (distance < maxDistance) {
                shadowScale = 1 + (1 - distance / maxDistance) * 0.2; // ‡∏Ç‡∏¢‡∏≤‡∏¢‡∏Ç‡∏ô‡∏≤‡∏î‡πÄ‡∏á‡∏≤‡∏ï‡∏≤‡∏°‡∏£‡∏∞‡∏¢‡∏∞‡∏ó‡∏≤‡∏á
            } else {
                shadowScale = 1;
            }

            // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏´‡∏ß‡∏ó‡∏µ‡πà‡∏™‡∏°‡∏π‡∏ó
            shadowX += dx * speed;
            shadowY += dy * speed;

            shadow.style.left = shadowX + 'px';
            shadow.style.top = shadowY + 'px';
            shadow.style.transform = `translate(-50%, -50%) scale(${shadowScale})`; // ‡∏õ‡∏£‡∏±‡∏ö‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÅ‡∏•‡∏∞‡∏Ç‡∏ô‡∏≤‡∏î‡πÄ‡∏á‡∏≤
        }

        // ‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏ö‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÄ‡∏°‡∏≤‡∏™‡πå
        document.addEventListener('mousemove', (e) => {
            mouseX = e.clientX;
            mouseY = e.clientY;
        });

        // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏Ç‡∏≠‡∏á‡πÄ‡∏á‡∏≤‡∏ó‡∏∏‡∏Å 10ms
        setInterval(updateShadowPosition, 10);